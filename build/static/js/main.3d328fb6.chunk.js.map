{"version":3,"sources":["Shelf.js","BookShelf.js","BooksAPI.js","SearchBooks.js","App.js","index.js"],"names":["Shelf","books","ChangeBookshelf","length","className","map","book","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","console","log","target","value","shelf","disabled","title","authors","id","BookShelf","bookslist","onChangeBookshelf","wanttoreadbooks","filter","b","readbooks","reading","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","SearchBooks","useState","searchtext","setSearchText","searchedbooks","setSearchedBooks","useEffect","a","query","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","getBooks","showingbooks","undefined","Array","isArray","c","type","placeholder","event","updateSearchQuery","App","setBooks","updateBook","BooksApi","isoldbook","concat","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d328fb6.chunk.js","sourcesContent":["const Shelf=({books,ChangeBookshelf})=>{\r\n    // console.log(books)\r\n\r\n    return (\r\n        \r\n        books.length!==0 &&(\r\n          <ol className=\"books-grid\">\r\n            {   books.map((book)=>(\r\n                \r\n\r\n                            <li key={book.id}>\r\n                                <div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                    <div\r\n                                    className=\"book-cover\"\r\n                                    style={{\r\n                                    width: 128,\r\n                                    height: 192,\r\n                                    backgroundImage:\r\n                                   \r\n                                        `url(${book.imageLinks.thumbnail})`,\r\n                                    }}\r\n                                    ></div>\r\n                                    <div className=\"book-shelf-changer\">\r\n\r\n                                        <select \r\n\r\n                                            onChange={(e) => {\r\n                                                console.log(e.target.value)\r\n                                                ChangeBookshelf(book ,e.target.value)}}\r\n                                            value={(book.shelf|| \"none\")}>\r\n                                        <option value=\"none\" disabled>\r\n                                            Move to...\r\n                                        </option>\r\n                                   \r\n                                        <option value=\"currentlyReading\">\r\n                                            Currently Reading\r\n                                        </option>\r\n\r\n                                        <option value=\"wantToRead\">Want to Read</option>\r\n          \r\n                                        <option value=\"read\">Read</option>\r\n\r\n                                        {/* <option value=\"none\">None</option> */}\r\n                                        </select>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{book.authors[0]}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n\r\n                 )\r\n\r\n             )            \r\n                \r\n            }\r\n         \r\n          </ol>\r\n        )\r\n   \r\n    );\r\n}\r\n\r\nexport default Shelf;","import { Link } from 'react-router-dom';\r\nimport Shelf from './Shelf';\r\nconst BookShelf=({bookslist,onChangeBookshelf})=>{\r\n  const wanttoreadbooks = bookslist.filter((b)=>b.shelf==='wantToRead')\r\n  const readbooks=bookslist.filter((b)=>b.shelf==='read')\r\n  const reading=bookslist.filter((b)=>b.shelf==='currentlyReading')\r\nreturn (\r\n    <div className=\"list-books\">\r\n    <div className=\"list-books-title\">\r\n      <h1>MyReads</h1>\r\n    </div>\r\n    <div className=\"list-books-content\">\r\n      <div>\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n          <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n               <Shelf books={reading} ChangeBookshelf= {onChangeBookshelf} />\r\n         \r\n            </ol>\r\n          </div>\r\n        </div>\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n          <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n            <Shelf books={wanttoreadbooks} ChangeBookshelf= {onChangeBookshelf} />\r\n            </ol>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">Read</h2>\r\n          <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n            <Shelf books={readbooks} ChangeBookshelf= {onChangeBookshelf} />\r\n            </ol>\r\n          </div>\r\n        </div>\r\n\r\n       \r\n      </div>\r\n    </div>\r\n    <div className=\"open-search\">\r\n                <Link to=\"/search\" >\r\n                            Add a book\r\n                </Link>\r\n      {/* <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a> */}\r\n    </div>\r\n  </div>\r\n)\r\n};\r\n\r\nexport default BookShelf;","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { Link } from 'react-router-dom';\r\nimport { useState,useEffect } from 'react';\r\nimport * as BooksApi from './BooksAPI'\r\nimport Shelf from './Shelf';\r\n\r\nconst SearchBooks=({bookslist,onChangeBookshelf})=>{\r\nconst [searchtext,setSearchText]= useState('');\r\nconst [searchedbooks,setSearchedBooks]= useState([]);\r\n \r\n      \r\n  useEffect(() => {\r\n    console.log(searchtext)\r\n    if (searchtext === \"\") {\r\n      console.log('empty')\r\n      setSearchedBooks([])\r\n       return}\r\n    const getBooks = async () => {\r\n          \r\n      const res = await BooksApi.search(searchtext,10);\r\n      // console.log(res)\r\n      \r\n      setSearchedBooks(res);\r\n    };\r\n    getBooks(); // fecthPosts is called each time space changed\r\n  }, [searchtext]);\r\n\r\n  const updateSearchQuery = (searchtext) => {\r\n    setSearchText(searchtext);\r\n    };\r\n    // console.log(searchedbooks)\r\n\r\n  //   useEffect(() => {\r\n  //     const getBooks = async (searchtext) => {\r\n  //     const res = await BooksApi.search(searchtext,10);\r\n  //     console.log(res)\r\n      \r\n  //     setSearchedBooks(res);\r\n  //   };\r\n  //   getBooks();\r\n  // }, []);\r\n\r\n    // const showingbooks = searchtext === '' ? []:bookslist.filter((b)=>b.title.toLowerCase().includes(searchtext.toLowerCase()))\r\n    // console.log(showingbooks)\r\n    let showingbooks = searchedbooks === undefined || searchtext===''? []:searchedbooks\r\n    // console.log(showingbooks)\r\n    if (Array.isArray(showingbooks)===true)\r\n    {\r\n      showingbooks=showingbooks.filter((book)=>{\r\n        // console.log(book)\r\n        let c=bookslist.filter((b)=>{\r\n          if (b.id===book.id){\r\n            console.log(book.title)\r\n            console.log(b.shelf)\r\n            book.shelf=b.shelf\r\n            return book\r\n\r\n          }\r\n          // return book\r\n        })\r\n        \r\n        if (c[0]) book=c[0]\r\n        // console.log(book.id)\r\n        if (book.authors!==undefined && book.imageLinks!==undefined)\r\n        {\r\n          return book\r\n        }\r\n      })\r\n    }\r\n   \r\n \r\n    return(\r\n      \r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n        <Link className=\"close-search\" to=\"/\" >\r\n          Close\r\n        </Link>\r\n       \r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, author, or ISBN\"\r\n              value={searchtext}\r\n              onChange={(event)=>updateSearchQuery(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n        {  Array.isArray(showingbooks)===true &&showingbooks.length!==0 &&(\r\n          <Shelf books={showingbooks  }  ChangeBookshelf= {onChangeBookshelf}/>)}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SearchBooks;","import \"./App.css\";\r\n\r\nimport BookShelf from \"./BookShelf\";\r\nimport SearchBooks from \"./SearchBooks\";\r\nimport { Route,Routes } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport * as BooksApi from './BooksAPI'\r\n\r\nfunction App() {\r\n  \r\n  const [books,setBooks]=useState([]);\r\n\r\n  const updateBook = (book,shelf) => {\r\n   \r\n    BooksApi.update(book,shelf)\r\n  \r\n    let isoldbook=false;\r\n    setBooks(books.map((b)=>\r\n    {\r\n      if (b.id===book.id)\r\n      { \r\n        isoldbook=true\r\n        book.shelf=shelf\r\n         return book;\r\n\r\n      }\r\n       return b;\r\n    }\r\n  \r\n    \r\n    ));\r\n    if (!isoldbook)\r\n    {\r\n      book.shelf=shelf\r\n      setBooks(books.concat(book))\r\n    }\r\n    console.log(books)\r\n\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n  \r\n    const getBooks = async () => {\r\n    \r\n      const res = await BooksApi.getAll();\r\n      console.log(res)\r\n      \r\n      setBooks(res);\r\n    };\r\n  \r\n    getBooks();\r\n    \r\n  },[]);\r\n  // console.log(books)\r\n  return (\r\n   \r\n    <Routes>\r\n      <Route exact path='/' \r\n      \r\n      element={   \r\n      \r\n       <BookShelf\r\n       bookslist={books}\r\n       onChangeBookshelf={updateBook}  />\r\n      }\r\n      />\r\n\r\n      <Route  path='/search' \r\n            \r\n            element={   \r\n              <SearchBooks \r\n              bookslist={books} \r\n              onChangeBookshelf={updateBook}\r\n             />\r\n            }\r\n            />\r\n      \r\n      \r\n    </Routes>\r\n   \r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}